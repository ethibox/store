apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "invoiceninja.fullname" . }}
  labels:
    app: {{ template "invoiceninja.name" . }}
    chart: {{ template "invoiceninja.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "invoiceninja.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "invoiceninja.name" . }}
        release: {{ .Release.Name }}
      annotations:
        backup.ark.heptio.com/backup-volumes: invoiceninja-data
    spec:
      volumes:
        - name: config
          configMap:
            name: {{ template "invoiceninja.fullname" . }}
        - name: invoiceninja-public
          emptyDir: {}
        {{- if .Values.persistence.enabled }}
        - name: invoiceninja-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "invoiceninja.fullname" .) }}
        - name: invoiceninja-data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "invoiceninja.fullname" .) }}
        {{ end }}
      {{ if and .Values.persistence.enabled .Release.IsInstall }}
      initContainers:
        - name: volume-mount-hack
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          command: ["sh", "-c", "chown -R www-data:www-data /var/www/app/storage"]
          volumeMounts:
            - name: invoiceninja-data
              mountPath: /var/www/app/storage
              securityContext:
                runAsUser: 0
      {{ end }}
      containers:
        - name: nginx
          image: nginx:1
          volumeMounts:
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: invoiceninja-public
              mountPath: /var/www/app/public
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          volumeMounts:
            - name: invoiceninja-public
              mountPath: /var/www/app/public
            {{- if .Values.persistence.enabled }}
            - name: invoiceninja-data
              mountPath: /var/www/app/storage
              subPath: storage
            {{ end }}
          env:
            - name: APP_CIPHER
              value: AES-256-CBC
            - name: APP_DEBUG
              value: "0"
            - name: APP_KEY
              value: SomeRandomStringSomeRandomString
          {{ if .Values.ingress.enabled }}
            - name: APP_URL
              value: https://{{ index .Values.ingress.hosts 0 }}
            - name: REQUIRE_HTTPS
              value: "false"
          {{- else }}
            - name: APP_URL
              value: http://localhost
          {{- end }}
            - name: DB_DATABASE
              value: ninja
            - name: DB_HOST
              value: {{ template "mariadb.fullname" . }}
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "mariadb.fullname" . }}
                  key: mariadb-root-password
            - name: PRECONFIGURED_INSTALL
              value: "true"
            - name: DB_USERNAME
              value: root
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
